# This is the CMakeCache file.
# For build in directory: /Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/armeabi-v7a
# It was generated by CMake: /Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/cmake/3.6.4111459/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Enable building amd64 assembly implementation
AMD64:BOOL=OFF

//No help, variable specified on the command line.
ANDROID_ABI:UNINITIALIZED=armeabi-v7a

//No help, variable specified on the command line.
ANDROID_NDK:UNINITIALIZED=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle

//No help, variable specified on the command line.
ANDROID_PLATFORM:UNINITIALIZED=android-16

//No help, variable specified on the command line.
ANDROID_STL:UNINITIALIZED=c++_static

//Enable building i686 assembly implementation
ASM686:BOOL=OFF

//Build a 32 bit version of the library.
BENCHMARK_BUILD_32_BITS:BOOL=OFF

//Flags used by the C++ compiler during coverage builds.
BENCHMARK_CXX_FLAGS_COVERAGE:STRING='-O0 -fno-limit-debug-info '

//Allow the downloading and in-tree building of unmet dependencies
BENCHMARK_DOWNLOAD_DEPENDENCIES:BOOL=OFF

//Enable building and running the assembly tests
BENCHMARK_ENABLE_ASSEMBLY_TESTS:BOOL=OFF

//Enable the use of exceptions in the benchmark library.
BENCHMARK_ENABLE_EXCEPTIONS:BOOL=ON

//Enable building the unit tests which depend on gtest
BENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF

//Enable installation of benchmark. (Projects embedding benchmark
// may want to turn this OFF.)
BENCHMARK_ENABLE_INSTALL:BOOL=ON

//Enable link time optimisation of the benchmark library.
BENCHMARK_ENABLE_LTO:BOOL=OFF

//Enable testing of the benchmark library.
BENCHMARK_ENABLE_TESTING:BOOL=ON

//Flags used for linking binaries during coverage builds.
BENCHMARK_EXE_LINKER_FLAGS_COVERAGE:STRING=

//Flags used by the shared libraries linker during coverage builds.
BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE:STRING=

//Build and test using libc++ as the standard library.
BENCHMARK_USE_LIBCXX:BOOL=OFF

//Value Computed by CMake
BoringSSL_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a/third_party/boringssl

//Value Computed by CMake
BoringSSL_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc/third_party/boringssl

//Build and run tests
CARES_BUILD_TESTS:BOOL=OFF

//Build tools
CARES_BUILD_TOOLS:BOOL=ON

//Create installation targets (chain builders may want to disable
// this)
CARES_INSTALL:BOOL=ON

//Build as a shared library
CARES_SHARED:BOOL=OFF

//Build as a static library
CARES_STATIC:BOOL=ON

//Build the static library as PIC (position independent)
CARES_STATIC_PIC:BOOL=OFF

//Archiver
CMAKE_AR:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-ar

//The ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang

//Flags used by the compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the assembler during release minsize builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the assembler during Release with Debug Info builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake try to support.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.4

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=Release

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=-std=c++14 -frtti -fexceptions

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=-latomic -lm "/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libc++_static.a" "/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libc++abi.a" "/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libandroid_support.a" "/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libunwind.a" "-ldl"

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=-latomic -lm

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//user executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Directory relative to CMAKE_INSTALL to install the cmake configuration
// files
CMAKE_INSTALL_CMAKEDIR:STRING=lib/cmake/protobuf

//read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//system admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//No help, variable specified on the command line.
CMAKE_LIBRARY_OUTPUT_DIRECTORY:UNINITIALIZED=/Users/willweizhao/Downloads/AndroidLoginClient/app/build/intermediates/cmake/release/obj/armeabi-v7a

//Path to a program.
CMAKE_LINKER:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-ld

//No help, variable specified on the command line.
CMAKE_MAKE_PROGRAM:UNINITIALIZED=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/cmake/3.6.4111459/bin/ninja

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Project

//Ranlib
CMAKE_RANLIB:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-strip

//The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/build/cmake/android.toolchain.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Single output directory for building all executables.
EXECUTABLE_OUTPUT_PATH:PATH=

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Installation directory for executables
INSTALL_BIN_DIR:PATH=/usr/local/bin

//Installation directory for headers
INSTALL_INC_DIR:PATH=/usr/local/include

//Installation directory for libraries
INSTALL_LIB_DIR:PATH=/usr/local/lib

//Installation directory for manual pages
INSTALL_MAN_DIR:PATH=/usr/local/share/man

//Installation directory for pkgconfig (.pc) files
INSTALL_PKGCONFIG_DIR:PATH=/usr/local/share/pkgconfig

//Single output directory for building all libraries.
LIBRARY_OUTPUT_PATH:PATH=

//Path to a library.
LIBRT:FILEPATH=LIBRT-NOTFOUND

//Value Computed by CMake
Project_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/armeabi-v7a

//Value Computed by CMake
Project_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app

//No help, variable specified on the command line.
RUN_HAVE_POSIX_REGEX:UNINITIALIZED=0

//No help, variable specified on the command line.
RUN_HAVE_STD_REGEX:UNINITIALIZED=0

//No help, variable specified on the command line.
RUN_HAVE_STEADY_CLOCK:UNINITIALIZED=0

//Dependencies for the target
address_sorting_LIB_DEPENDS:STATIC=general;dl;general;m;

//Value Computed by CMake
benchmark_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a/third_party/benchmark

//Dependencies for target
benchmark_LIB_DEPENDS:STATIC=

//Value Computed by CMake
benchmark_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc/third_party/benchmark

//Dependencies for the target
benchmark_main_LIB_DEPENDS:STATIC=general;benchmark;

//Dependencies for target
boringssl_gtest_LIB_DEPENDS:STATIC=

//Value Computed by CMake
c-ares_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a/third_party/cares/cares

//Dependencies for target
c-ares_LIB_DEPENDS:STATIC=

//Value Computed by CMake
c-ares_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc/third_party/cares/cares

//Dependencies for target
crypto_LIB_DEPENDS:STATIC=

//Dependencies for the target
decrepit_LIB_DEPENDS:STATIC=general;crypto;general;ssl;

//Build libraries that are binary compatible across a larger number
// of OS and libc versions
gRPC_BACKWARDS_COMPATIBILITY_MODE:BOOL=OFF

//Provider of benchmark library
gRPC_BENCHMARK_PROVIDER:STRING=module

//Build codegen
gRPC_BUILD_CODEGEN:BOOL=off

//Build C# extensions
gRPC_BUILD_CSHARP_EXT:BOOL=ON

//Build tests
gRPC_BUILD_TESTS:BOOL=OFF

//Provider of c-ares library
gRPC_CARES_PROVIDER:STRING=module

//Provider of gflags library
gRPC_GFLAGS_PROVIDER:STRING=module

//Generate installation target: gRPC_ZLIB_PROVIDER, gRPC_CARES_PROVIDER,
// gRPC_SSL_PROVIDER and gRPC_PROTOBUF_PROVIDER must all be "package"
gRPC_INSTALL:BOOL=OFF

//Installation directory for executables
gRPC_INSTALL_BINDIR:STRING=bin

//Installation directory for cmake config files
gRPC_INSTALL_CMAKEDIR:STRING=lib/cmake/grpc

//Installation directory for headers
gRPC_INSTALL_INCLUDEDIR:STRING=include

//Installation directory for libraries
gRPC_INSTALL_LIBDIR:STRING=lib

//Installation directory for root certificates
gRPC_INSTALL_SHAREDIR:STRING=share/grpc

//Algorithm for searching protobuf package
gRPC_PROTOBUF_PACKAGE_TYPE:STRING=

//Provider of protobuf library
gRPC_PROTOBUF_PROVIDER:STRING=module

//Provider of ssl library
gRPC_SSL_PROVIDER:STRING=module

//Use the protobuf-lite library
gRPC_USE_PROTO_LITE:BOOL=OFF

//Provider of zlib library
gRPC_ZLIB_PROVIDER:STRING=module

//Value Computed by CMake
gflags_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a/third_party/gflags

//Value Computed by CMake
gflags_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc/third_party/gflags

//Dependencies for target
gflags_nothreads_static_LIB_DEPENDS:STATIC=

//Dependencies for the target
gpr_LIB_DEPENDS:STATIC=general;dl;general;m;general;android;general;log;

//Dependencies for the target
grpc++_LIB_DEPENDS:STATIC=general;ssl;general;libprotobuf;general;dl;general;m;general;grpc;general;gpr;

//Dependencies for the target
grpc++_cronet_LIB_DEPENDS:STATIC=general;ssl;general;libprotobuf;general;dl;general;m;general;gpr;general;grpc_cronet;general;grpc;

//Dependencies for the target
grpc++_unsecure_LIB_DEPENDS:STATIC=general;libprotobuf;general;dl;general;m;general;gpr;general;grpc_unsecure;

//Value Computed by CMake
grpc_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a

//Dependencies for the target
grpc_LIB_DEPENDS:STATIC=general;ssl;general;zlibstatic;general;c-ares;general;address_sorting;general;dl;general;m;general;gpr;

//Value Computed by CMake
grpc_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc

//Dependencies for the target
grpc_cronet_LIB_DEPENDS:STATIC=general;ssl;general;zlibstatic;general;c-ares;general;address_sorting;general;dl;general;m;general;gpr;

//Dependencies for the target
grpc_csharp_ext_LIB_DEPENDS:STATIC=general;dl;general;m;general;grpc;general;gpr;

//Dependencies for the target
grpc_plugin_support_LIB_DEPENDS:STATIC=general;libprotobuf;general;dl;general;m;

//Dependencies for the target
grpc_unsecure_LIB_DEPENDS:STATIC=general;zlibstatic;general;c-ares;general;address_sorting;general;dl;general;m;general;gpr;

//gRPC CPP plugin binary on host
helloworld_GRPC_CPP_PLUGIN_EXECUTABLE:STRING=/usr/local/bin/grpc_cpp_plugin

//Protoc binary on host
helloworld_PROTOBUF_PROTOC_EXECUTABLE:STRING=/usr/local/bin/protoc

//Dependencies for target
libprotobuf-lite_LIB_DEPENDS:STATIC=

//Dependencies for target
libprotobuf_LIB_DEPENDS:STATIC=

//Path to a library.
log-lib:FILEPATH=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/ndk-bundle/platforms/android-16/arch-arm/usr/lib/liblog.so

//Dependencies for target
output_test_helper_LIB_DEPENDS:STATIC=

//Dependencies for the target
piggy_proto_lib_LIB_DEPENDS:STATIC=general;grpc++;general;libprotobuf;general;android;general;log;

//Value Computed by CMake
protobuf_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a/third_party/protobuf

//Build conformance tests
protobuf_BUILD_CONFORMANCE:BOOL=OFF

//Build examples
protobuf_BUILD_EXAMPLES:BOOL=OFF

//Build libprotoc and protoc compiler
protobuf_BUILD_PROTOC_BINARIES:BOOL=off

//Build Shared Libraries
protobuf_BUILD_SHARED_LIBS:BOOL=OFF

//Build tests
protobuf_BUILD_TESTS:BOOL=OFF

//Default debug postfix
protobuf_DEBUG_POSTFIX:STRING=d

//Install the examples folder
protobuf_INSTALL_EXAMPLES:BOOL=OFF

//CMake build-in FindProtobuf.cmake module compatible
protobuf_MODULE_COMPATIBLE:BOOL=OFF

//Link static runtime libraries
protobuf_MSVC_STATIC_RUNTIME:BOOL=OFF

//Value Computed by CMake
protobuf_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc/third_party/protobuf/cmake

//Enable for verbose output
protobuf_VERBOSE:BOOL=OFF

//Build with zlib support
protobuf_WITH_ZLIB:BOOL=OFF

//Dependencies for the target
server_message_getter_lib_LIB_DEPENDS:STATIC=general;piggy_proto_lib;general;android;

//Dependencies for the target
ssl_LIB_DEPENDS:STATIC=general;crypto;

//Value Computed by CMake
zlib_BINARY_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/grpc/outputs/armeabi-v7a/third_party/zlib

//Dependencies for target
zlib_LIB_DEPENDS:STATIC=

//Value Computed by CMake
zlib_SOURCE_DIR:STATIC=/Users/willweizhao/Downloads/AndroidLoginClient/grpc/third_party/zlib

//Dependencies for target
zlibstatic_LIB_DEPENDS:STATIC=


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BENCHMARK_CXX_FLAGS_COVERAGE
BENCHMARK_CXX_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BENCHMARK_EXE_LINKER_FLAGS_COVERAGE
BENCHMARK_EXE_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//Test BENCHMARK_HAS_CXX03_FLAG
BENCHMARK_HAS_CXX03_FLAG:INTERNAL=1
//Test BENCHMARK_HAS_O3_FLAG
BENCHMARK_HAS_O3_FLAG:INTERNAL=1
//Test BENCHMARK_HAS_WNO_ODR
BENCHMARK_HAS_WNO_ODR:INTERNAL=1
//ADVANCED property for variable: BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE
BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//CARES LIBRARY FOUND
CARES_FOUND:INTERNAL=1
//CARES LIBRARIES
CARES_LIBRARIES:INTERNAL=c-ares::cares
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/willweizhao/Downloads/AndroidLoginClient/app/.cxx/cmake/release/armeabi-v7a
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=6
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/cmake/3.6.4111459/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/cmake/3.6.4111459/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/cmake/3.6.4111459/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=Android Gradle
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have symbol pthread_create
CMAKE_HAVE_LIBC_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/willweizhao/Downloads/AndroidLoginClient/app
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_CMAKEDIR
CMAKE_INSTALL_CMAKEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=0
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=68
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/Users/willweizhao/Documents/SoftwareDevelopment/android-sdk-macosx/cmake/3.6.4111459/share/cmake-3.6
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
COMPILE_HAVE_GNU_POSIX_REGEX:INTERNAL=FALSE
//Result of TRY_COMPILE
COMPILE_HAVE_POSIX_REGEX:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_STD_REGEX:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_STEADY_CLOCK:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_THREAD_SAFETY_ATTRIBUTES:INTERNAL=FALSE
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.21.0 (Apple Git-122)()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have symbol AF_INET6
HAVE_AF_INET6:INTERNAL=1
//Have include arpa/inet.h
HAVE_ARPA_INET_H:INTERNAL=1
//Have include arpa/nameser_compat.h
HAVE_ARPA_NAMESER_COMPAT_H:INTERNAL=1
//Have include arpa/nameser.h
HAVE_ARPA_NAMESER_H:INTERNAL=1
//Have include assert.h
HAVE_ASSERT_H:INTERNAL=1
//Have symbol bitncmp
HAVE_BITNCMP:INTERNAL=
//Test HAVE_BOOL_T
HAVE_BOOL_T:INTERNAL=1
//Have symbol CLOCK_MONOTONIC
HAVE_CLOCK_GETTIME_MONOTONIC:INTERNAL=1
//Have symbol closesocket
HAVE_CLOSESOCKET:INTERNAL=
//Have symbol CloseSocket
HAVE_CLOSESOCKET_CAMEL:INTERNAL=
//Have symbol connect
HAVE_CONNECT:INTERNAL=1
//Test HAVE_CXX_FLAG_COVERAGE
HAVE_CXX_FLAG_COVERAGE:INTERNAL=1
//Test HAVE_CXX_FLAG_FSTRICT_ALIASING
HAVE_CXX_FLAG_FSTRICT_ALIASING:INTERNAL=1
//Test HAVE_CXX_FLAG_PEDANTIC
HAVE_CXX_FLAG_PEDANTIC:INTERNAL=1
//Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
HAVE_CXX_FLAG_PEDANTIC_ERRORS:INTERNAL=1
//Test HAVE_CXX_FLAG_STD_CXX11
HAVE_CXX_FLAG_STD_CXX11:INTERNAL=1
//Test HAVE_CXX_FLAG_WALL
HAVE_CXX_FLAG_WALL:INTERNAL=1
//Test HAVE_CXX_FLAG_WD654
HAVE_CXX_FLAG_WD654:INTERNAL=
//Test HAVE_CXX_FLAG_WERROR
HAVE_CXX_FLAG_WERROR:INTERNAL=1
//Test HAVE_CXX_FLAG_WEXTRA
HAVE_CXX_FLAG_WEXTRA:INTERNAL=1
//Test HAVE_CXX_FLAG_WFLOAT_EQUAL
HAVE_CXX_FLAG_WFLOAT_EQUAL:INTERNAL=1
//Test HAVE_CXX_FLAG_WSHADOW
HAVE_CXX_FLAG_WSHADOW:INTERNAL=1
//Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
HAVE_CXX_FLAG_WSHORTEN_64_TO_32:INTERNAL=1
//Test HAVE_CXX_FLAG_WSTRICT_ALIASING
HAVE_CXX_FLAG_WSTRICT_ALIASING:INTERNAL=1
//Test HAVE_CXX_FLAG_WTHREAD_SAFETY
HAVE_CXX_FLAG_WTHREAD_SAFETY:INTERNAL=1
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have symbol fcntl
HAVE_FCNTL:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have symbol FIONBIO
HAVE_FIONBIO:INTERNAL=1
//Have include fnmatch.h
HAVE_FNMATCH_H:INTERNAL=1
//Have symbol freeaddrinfo
HAVE_FREEADDRINFO:INTERNAL=1
//Have function fseeko
HAVE_FSEEKO:INTERNAL=1
//Have symbol getaddrinfo
HAVE_GETADDRINFO:INTERNAL=1
//Have symbol getenv
HAVE_GETENV:INTERNAL=1
//Have symbol gethostbyaddr
HAVE_GETHOSTBYADDR:INTERNAL=1
//Have symbol gethostbyname
HAVE_GETHOSTBYNAME:INTERNAL=1
//Have symbol gethostname
HAVE_GETHOSTNAME:INTERNAL=1
//Have symbol getnameinfo
HAVE_GETNAMEINFO:INTERNAL=1
//Have symbol getservbyport_r
HAVE_GETSERVBYPORT_R:INTERNAL=
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=1
//Have library socket
HAVE_GHBN_LIBSOCKET:INTERNAL=
//Have symbol if_indextoname
HAVE_IF_INDEXTONAME:INTERNAL=1
//Have symbol inet_net_pton
HAVE_INET_NET_PTON:INTERNAL=
//Have symbol inet_ntop
HAVE_INET_NTOP:INTERNAL=1
//Have symbol inet_pton
HAVE_INET_PTON:INTERNAL=1
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol ioctl
HAVE_IOCTL:INTERNAL=
//Have symbol ioctlsocket
HAVE_IOCTLSOCKET:INTERNAL=
//Have symbol IoctlSocket
HAVE_IOCTLSOCKET_CAMEL:INTERNAL=
//Have symbol SIOCGIFADDR
HAVE_IOCTL_SIOCGIFADDR:INTERNAL=1
//Have library nsl
HAVE_LIBNSL:INTERNAL=
//Have library rt
HAVE_LIBRT:INTERNAL=
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Test HAVE_LL
HAVE_LL:INTERNAL=1
//Test HAVE_LONGLONG
HAVE_LONGLONG:INTERNAL=1
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have symbol MSG_NOSIGNAL
HAVE_MSG_NOSIGNAL:INTERNAL=1
//Have include netdb.h
HAVE_NETDB_H:INTERNAL=1
//Have include netinet/in.h
HAVE_NETINET_IN_H:INTERNAL=1
//Have include netinet/tcp.h
HAVE_NETINET_TCP_H:INTERNAL=1
//Have include net/if.h
HAVE_NET_IF_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_OFF64_T:INTERNAL=TRUE
//Have symbol O_NONBLOCK
HAVE_O_NONBLOCK:INTERNAL=1
//Have symbol PF_INET6
HAVE_PF_INET6:INTERNAL=1
//Have symbol recv
HAVE_RECV:INTERNAL=1
//Have symbol recvfrom
HAVE_RECVFROM:INTERNAL=1
//Have library resolv
HAVE_RES_SERVICENAME_IN_LIBRESOLV:INTERNAL=
//Have symbol send
HAVE_SEND:INTERNAL=1
//Have symbol setsockopt
HAVE_SETSOCKOPT:INTERNAL=1
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Test HAVE_SIG_ATOMIC_T
HAVE_SIG_ATOMIC_T:INTERNAL=1
//Test HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID
HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID:INTERNAL=1
//Have symbol socket
HAVE_SOCKET:INTERNAL=1
//Have includes socket.h
HAVE_SOCKET_H:INTERNAL=
//Have library socket
HAVE_SOCKET_LIBSOCKET:INTERNAL=
//Test HAVE_SOCKLEN_T
HAVE_SOCKLEN_T:INTERNAL=1
//Have symbol SO_NONBLOCK
HAVE_SO_NONBLOCK:INTERNAL=
//Test HAVE_SSIZE_T
HAVE_SSIZE_T:INTERNAL=1
//Have include stdbool.h
HAVE_STDBOOL_H:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have symbol strcasecmp
HAVE_STRCASECMP:INTERNAL=1
//Have symbol strcmpi
HAVE_STRCMPI:INTERNAL=
//Have symbol strdup
HAVE_STRDUP:INTERNAL=1
//Have symbol stricmp
HAVE_STRICMP:INTERNAL=
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=1
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have symbol strncasecmp
HAVE_STRNCASECMP:INTERNAL=1
//Have symbol strncmpi
HAVE_STRNCMPI:INTERNAL=
//Have symbol strnicmp
HAVE_STRNICMP:INTERNAL=
//Have includes stropts.h
HAVE_STROPTS_H:INTERNAL=
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Test HAVE_STRUCT_ADDRINFO
HAVE_STRUCT_ADDRINFO:INTERNAL=1
//Test HAVE_STRUCT_IN6_ADDR
HAVE_STRUCT_IN6_ADDR:INTERNAL=1
//Test HAVE_STRUCT_SOCKADDR_IN6
HAVE_STRUCT_SOCKADDR_IN6:INTERNAL=1
//Test HAVE_STRUCT_SOCKADDR_STORAGE
HAVE_STRUCT_SOCKADDR_STORAGE:INTERNAL=1
//Test HAVE_STRUCT_TIMEVAL
HAVE_STRUCT_TIMEVAL:INTERNAL=1
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=1
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include sys/select.h
HAVE_SYS_SELECT_H:INTERNAL=1
//Have include sys/socket.h
HAVE_SYS_SOCKET_H:INTERNAL=1
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=1
//Have include time.h
HAVE_TIME_H:INTERNAL=1
//Test HAVE_TYPE_SOCKET
HAVE_TYPE_SOCKET:INTERNAL=
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have includes windows.h
HAVE_WINDOWS_H:INTERNAL=
//Have includes winsock2.h;windows.h
HAVE_WINSOCK2_H:INTERNAL=
//Have includes winsock.h;windows.h
HAVE_WINSOCK_H:INTERNAL=
//Have symbol writev
HAVE_WRITEV:INTERNAL=1
//Have includes winsock2.h;ws2tcpip.h;windows.h
HAVE_WS2TCPIP_H:INTERNAL=
//Have function __system_property_get
HAVE___SYSTEM_PROPERTY_GET:INTERNAL=1
//Result of TRY_COMPILE
HAVE_uint32_t:INTERNAL=TRUE
//CHECK_TYPE_SIZE: sizeof(off64_t)
OFF64_T:INTERNAL=8
//Have include unistd.h
Z_HAVE_UNISTD_H:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/usr/local
//STRINGS property for variable: gRPC_BENCHMARK_PROVIDER
gRPC_BENCHMARK_PROVIDER-STRINGS:INTERNAL=module;package
//STRINGS property for variable: gRPC_CARES_PROVIDER
gRPC_CARES_PROVIDER-STRINGS:INTERNAL=module;package
//STRINGS property for variable: gRPC_GFLAGS_PROVIDER
gRPC_GFLAGS_PROVIDER-STRINGS:INTERNAL=module;package
//STRINGS property for variable: gRPC_PROTOBUF_PACKAGE_TYPE
gRPC_PROTOBUF_PACKAGE_TYPE-STRINGS:INTERNAL=CONFIG;MODULE
//STRINGS property for variable: gRPC_PROTOBUF_PROVIDER
gRPC_PROTOBUF_PROVIDER-STRINGS:INTERNAL=module;package
//STRINGS property for variable: gRPC_SSL_PROVIDER
gRPC_SSL_PROVIDER-STRINGS:INTERNAL=module;package
//STRINGS property for variable: gRPC_ZLIB_PROVIDER
gRPC_ZLIB_PROVIDER-STRINGS:INTERNAL=module;package
//ADVANCED property for variable: protobuf_DEBUG_POSTFIX
protobuf_DEBUG_POSTFIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: protobuf_MODULE_COMPATIBLE
protobuf_MODULE_COMPATIBLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: protobuf_VERBOSE
protobuf_VERBOSE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(uint32_t)
uint32_t:INTERNAL=4

