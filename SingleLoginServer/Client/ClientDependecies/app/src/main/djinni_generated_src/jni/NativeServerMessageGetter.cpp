// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from piggy.djinni

#include "NativeServerMessageGetter.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeServerMessageGetter::NativeServerMessageGetter() : ::djinni::JniInterface<::ns_piggy_native::ServerMessageGetter, NativeServerMessageGetter>("com/faip/piggy/djinni/ServerMessageGetter$CppProxy") {}

NativeServerMessageGetter::~NativeServerMessageGetter() = default;


CJNIEXPORT void JNICALL Java_com_faip_piggy_djinni_ServerMessageGetter_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ns_piggy_native::ServerMessageGetter>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_faip_piggy_djinni_ServerMessageGetter_00024CppProxy_tryLogin(JNIEnv* jniEnv, jobject /*this*/, jstring j_hostAndPort, jstring j_userName, jstring j_userPassword)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ns_piggy_native::ServerMessageGetter::try_login(::djinni::String::toCpp(jniEnv, j_hostAndPort),
                                                                   ::djinni::String::toCpp(jniEnv, j_userName),
                                                                   ::djinni::String::toCpp(jniEnv, j_userPassword));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_faip_piggy_djinni_ServerMessageGetter_00024CppProxy_tryRegister(JNIEnv* jniEnv, jobject /*this*/, jstring j_hostAndPort, jstring j_userName, jstring j_userPassword)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ns_piggy_native::ServerMessageGetter::try_register(::djinni::String::toCpp(jniEnv, j_hostAndPort),
                                                                      ::djinni::String::toCpp(jniEnv, j_userName),
                                                                      ::djinni::String::toCpp(jniEnv, j_userPassword));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_faip_piggy_djinni_ServerMessageGetter_00024CppProxy_tryStatus(JNIEnv* jniEnv, jobject /*this*/, jstring j_hostAndPort, jstring j_userName, jstring j_userToken)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ns_piggy_native::ServerMessageGetter::try_status(::djinni::String::toCpp(jniEnv, j_hostAndPort),
                                                                    ::djinni::String::toCpp(jniEnv, j_userName),
                                                                    ::djinni::String::toCpp(jniEnv, j_userToken));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
