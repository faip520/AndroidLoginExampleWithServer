// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from piggy.djinni

package com.faip.piggy.djinni;

import java.util.concurrent.atomic.AtomicBoolean;

/*package*/ abstract class ServerMessageGetter {
    public static String tryLogin(String hostAndPort, String userName, String userPassword)
    {
        return CppProxy.tryLogin(hostAndPort,
                                 userName,
                                 userPassword);
    }

    public static String tryRegister(String hostAndPort, String userName, String userPassword)
    {
        return CppProxy.tryRegister(hostAndPort,
                                    userName,
                                    userPassword);
    }

    public static String tryStatus(String hostAndPort, String userName, String userToken)
    {
        return CppProxy.tryStatus(hostAndPort,
                                  userName,
                                  userToken);
    }

    private static final class CppProxy extends ServerMessageGetter
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        public static native String tryLogin(String hostAndPort, String userName, String userPassword);

        public static native String tryRegister(String hostAndPort, String userName, String userPassword);

        public static native String tryStatus(String hostAndPort, String userName, String userToken);
    }
}
